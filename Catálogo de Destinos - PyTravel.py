# -*- coding: utf-8 -*-
"""Catálogo de Destinos - PyTravel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S4e-WVJN3BnbB51D3kiT1XIQasFRwpp5
"""

pip install python-docx

from docx import Document

# Função para extrair cidades a partir de uma seção do documento
def extrair_cidades(secao_texto):
    linhas = secao_texto.split('\n')
    cidades = []
    for linha in linhas:
        if '(' in linha and ')' in linha:
            cidades.append(linha.strip())
    return cidades

# Abrir o documento Word
doc = Document("Catálogo de Destinos - PyTravel .docx")

# Inicialização das variáveis de coleta
texto_total = ""
for paragrafo in doc.paragraphs:
    texto_total += paragrafo.text + "\n"

# Dicionário para mapear títulos às listas
secoes = {
    "praianas": "🌴 Destinos para Cidades Praianas",
    "capitais": "🏙️ Destinos para Cidades Capitais",
    "interior": "🌄 Destinos para Cidades Interiorana",
    "avioes": "✈️ Pacotes de Avião",
    "onibus": "🚌 Pacotes de Ônibus",
    "navios": "🚢 Pacotes de Navio"
}

# Função para pegar o texto entre duas seções
def texto_entre_tags(texto, tag_inicio, tag_fim):
    inicio = texto.find(tag_inicio)
    fim = texto.find(tag_fim)
    return texto[inicio + len(tag_inicio):fim].strip()

# Extração das listas principais
praianas = extrair_cidades(texto_entre_tags(texto_total, secoes["praianas"], secoes["capitais"]))
capitais = extrair_cidades(texto_entre_tags(texto_total, secoes["capitais"], secoes["interior"]))
interior = extrair_cidades(texto_entre_tags(texto_total, secoes["interior"], secoes["avioes"]))
avioes = extrair_cidades(texto_entre_tags(texto_total, secoes["avioes"], secoes["onibus"]))
onibus = extrair_cidades(texto_entre_tags(texto_total, secoes["onibus"], secoes["navios"]))
navios = extrair_cidades(texto_total.split(secoes["navios"])[1])

# Função de cruzamento entre listas
def cruzar_listas(lista1, lista2):
    return list(set(lista1) & set(lista2))

# Cruzamentos solicitados
capitais_praianas = cruzar_listas(capitais, praianas)
praias_onibus = cruzar_listas(praianas, onibus)
interior_aviao = cruzar_listas(interior, avioes)
capitais_navio = cruzar_listas(capitais, navios)

# Exibição dos resultados
print("Capitais que são cidades praianas:", capitais_praianas)
print("Destinos de praias com pacotes de ônibus:", praias_onibus)
print("Cidades do interior com pacote de avião:", interior_aviao)
print("Capitais com rotas de navio:", capitais_navio)
